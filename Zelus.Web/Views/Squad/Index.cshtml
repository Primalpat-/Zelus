@using Z.Core.Extensions
@using Zelus.Web.Models.Extensions
@using Zelus.Web.Models.Helpers
@model Zelus.Data.Models.Squad
    
<style type="text/css">
    .damage-breakdown {
        margin-top: 20px;
    }

    .raid, .phase, .percent, .damage {
        font-size: 18px;
    }

    .raid, .phase, .percent {
        font-weight: bold;
    }

    .phase {
        width: 90px;
    }

    .percent {
        width: calc(100% - 90px);
        text-align: right;
    }

    .victory-screen {
        width: 100%;
        margin-top: 20px;
    }
</style>

@section head {
    <meta property="og:title" content="@Model.Name (@(Math.Round((Model.Damage.ToDecimal() / Model.RaidPhas.Health.ToDecimal()) * 100))%)" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="http://www.swgohboards.com/squad/index/@Model.Id" />
    @if (Model.VictoryScreenImage.IsNull())
    {
        <meta property="og:image" content="http://www.swgohboards.com@(Url.Content("~/Content/Images/victory-screen-placeholder.jpg"))" />
    }
    else
    {
        <meta property="og:image" content="http://www.swgohboards.com@(Url.Content(Model.VictoryScreenImage.Path.ToVirtual()))" />
    }
    <meta property="og:description" content="@Model.Player.Name" />
    <meta property="og:site_name" content="swgohboards.com"/>
}

@section scripts{
    <script type="text/javascript">
        $(document).ready(function() {
            var localDate = moment(new Date('@Model.Timestamp' + ' UTC'));
            $('#submitted').html('submitted ' + moment.duration(@Model.Timestamp.DurationSince()).humanize() + ' ago')
                           .attr('title', 'Submitted on ' + localDate.format('ddd, MMM D Y h:mm a'));
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
}

<div class="row">
    <div class="col-md-3">
        <h2>
            @Model.Name<br/>
            <small>by <a href="@Model.Player.CollectionUrl">@Model.Player.Name</a></small><br/>
        </h2>
    </div>
    <div class="col-md-3">
        <div class="damage-breakdown">
            <div class="raid">@Model.RaidPhas.Raid.Name</div><!--
            --><div class="phase vertical-center">@Model.RaidPhas.Name</div><!--
            --><div class="percent vertical-center">@(Math.Round((Model.Damage.ToDecimal() / Model.RaidPhas.Health.ToDecimal()) * 100))%</div><!--
            --><div class="damage">@($"{Model.Damage:n0}") damage</div>
        </div>
    </div>
    <div class="col-md-4">
        <a href="#" class="victory-screen-preview-link" data-toggle="modal" data-target=".image-preview">
            @if (Model.VictoryScreenImage.IsNull())
            {
                <img class="victory-screen" src="@Url.Content("~/Content/Images/victory-screen-placeholder.jpg")" /><br />
            }
            else
            {
                <img class="victory-screen" src="@Url.Content(Model.VictoryScreenImage.Path.ToVirtual())" /><br />
            }
        </a>
    </div>
</div>

<div class="row">
    <div class="col-md-2">
        <div class="text-center">
            <img src="~/Content/Images/crown.png" style="height: 30px;" />
        </div>
    </div>
    <div class="col-md-8 text-right">
        <small><span id="submitted" data-toggle="tooltip" data-placement="left" title=""></span></small>
    </div>
</div>
<div class="row">
    <div class="col-md-2">
        @Html.Partial("_PlayerCharacter", @Model.SquadCharacter.ToCharacterVM())
    </div>
    <div class="col-md-2">
        @if (Model.SquadCharacter1.IsNotNull())
        {
            @Html.Partial("_PlayerCharacter", @Model.SquadCharacter1.ToCharacterVM())
        }
    </div>
    <div class="col-md-2">
        @if (Model.SquadCharacter2.IsNotNull())
        {
            @Html.Partial("_PlayerCharacter", @Model.SquadCharacter2.ToCharacterVM())
        }
    </div>
    <div class="col-md-2">
        @if (Model.SquadCharacter3.IsNotNull())
        {
            @Html.Partial("_PlayerCharacter", @Model.SquadCharacter3.ToCharacterVM())
        }
    </div>
    <div class="col-md-2">
        @if (Model.SquadCharacter4.IsNotNull())
        {
            @Html.Partial("_PlayerCharacter", @Model.SquadCharacter4.ToCharacterVM())
        }
    </div>
</div>
<div class="row">
    <div class="col-xs-12">
        <h4>Notes:</h4>    
    </div>
</div>
<div class="row">
    <div class="col-xs-12">
        @Html.Raw(@System.Web.HttpUtility.HtmlDecode(Model.Notes))
    </div>
</div>
<div class="modal fade image-preview" tabindex="-1" role="dialog" aria-labelledby="imagePreviewLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="imagePreviewLabel">Image Preview</h4>
            </div>
            <div class="modal-body">
                @if (Model.VictoryScreenImage.IsNull())
                {
                    <img id="victoryScreenModalPreviewImage" class="victory-screen" src="@Url.Content("~/Content/Images/victory-screen-placeholder.jpg")" />
                }
                else
                {
                    <img id="victoryScreenModalPreviewImage" class="victory-screen" src="@Url.Content(Model.VictoryScreenImage.Path.ToVirtual())" />
                }
            </div>
        </div>
    </div>
</div>