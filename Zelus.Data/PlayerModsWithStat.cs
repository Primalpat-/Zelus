// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Zelus.Data
{

    // PlayerModsWithStats
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class PlayerModsWithStat
    {
        public int Id { get; set; } // Id (Primary key)
        public int PlayerId { get; set; } // PlayerId (Primary key)
        public int? PlayerCharacterId { get; set; } // PlayerCharacterId
        public int Pips { get; set; } // Pips (Primary key)
        public int SlotId { get; set; } // SlotId (Primary key)
        public int SetId { get; set; } // SetId (Primary key)
        public int PrimaryTypeId { get; set; } // PrimaryTypeId (Primary key)
        public int IsInPlayerSet { get; set; } // IsInPlayerSet (Primary key)
        public decimal? Speed { get; set; } // Speed
        public decimal? CritChance { get; set; } // CritChance
        public decimal? CritDamage { get; set; } // CritDamage
        public decimal? FlatOffense { get; set; } // FlatOffense
        public decimal? PercentageOffense { get; set; } // PercentageOffense
        public decimal? Potency { get; set; } // Potency
        public decimal? Accuracy { get; set; } // Accuracy
        public decimal? FlatProtection { get; set; } // FlatProtection
        public decimal? PercentageProtection { get; set; } // PercentageProtection
        public decimal? FlatHealth { get; set; } // FlatHealth
        public decimal? PercentageHealth { get; set; } // PercentageHealth
        public decimal? FlatDefense { get; set; } // FlatDefense
        public decimal? PercentageDefense { get; set; } // PercentageDefense
        public decimal? Tenacity { get; set; } // Tenacity
        public decimal? CritAvoidance { get; set; } // CritAvoidance

        public PlayerModsWithStat()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
