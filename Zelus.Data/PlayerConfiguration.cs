// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Zelus.Data
{

    // Players
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class PlayerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Player>
    {
        public PlayerConfiguration()
            : this("dbo")
        {
        }

        public PlayerConfiguration(string schema)
        {
            ToTable("Players", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.GuildId).HasColumnName(@"GuildId").HasColumnType("int").IsRequired();
            Property(x => x.InGameName).HasColumnName(@"InGameName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SwgohGgName).HasColumnName(@"SwgohGgName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SwgohGgUrl).HasColumnName(@"SwgohGgUrl").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.CollectionSyncEnabled).HasColumnName(@"CollectionSyncEnabled").HasColumnType("bit").IsRequired();
            Property(x => x.LastCollectionSync).HasColumnName(@"LastCollectionSync").HasColumnType("datetime").IsRequired();
            Property(x => x.ModSyncEnabled).HasColumnName(@"ModSyncEnabled").HasColumnType("bit").IsRequired();
            Property(x => x.LastModSync).HasColumnName(@"LastModSync").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.Guild).WithMany(b => b.Players).HasForeignKey(c => c.GuildId); // FK_Players_Guilds
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
