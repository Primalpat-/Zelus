// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Zelus.Data
{

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class ZelusDbContext : System.Data.Entity.DbContext, IZelusDbContext
    {
        public System.Data.Entity.DbSet<Alliance> Alliances { get; set; } // Alliances
        public System.Data.Entity.DbSet<Guild> Guilds { get; set; } // Guilds
        public System.Data.Entity.DbSet<ModSet> ModSets { get; set; } // ModSets
        public System.Data.Entity.DbSet<ModSlot> ModSlots { get; set; } // ModSlots
        public System.Data.Entity.DbSet<ModStatType> ModStatTypes { get; set; } // ModStatTypes
        public System.Data.Entity.DbSet<ModStatUnit> ModStatUnits { get; set; } // ModStatUnits
        public System.Data.Entity.DbSet<Player> Players { get; set; } // Players
        public System.Data.Entity.DbSet<PlayerCharacter> PlayerCharacters { get; set; } // PlayerCharacters
        public System.Data.Entity.DbSet<PlayerMod> PlayerMods { get; set; } // PlayerMods
        public System.Data.Entity.DbSet<PlayerModSet> PlayerModSets { get; set; } // PlayerModSets
        public System.Data.Entity.DbSet<PlayerShip> PlayerShips { get; set; } // PlayerShips
        public System.Data.Entity.DbSet<Unit> Units { get; set; } // Units

        static ZelusDbContext()
        {
            System.Data.Entity.Database.SetInitializer<ZelusDbContext>(null);
        }

        public ZelusDbContext()
            : base("Name=ZelusContext")
        {
            InitializePartial();
        }

        public ZelusDbContext(string connectionString)
            : base(connectionString)
        {
            InitializePartial();
        }

        public ZelusDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
            InitializePartial();
        }

        public ZelusDbContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
            InitializePartial();
        }

        public ZelusDbContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
            InitializePartial();
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AllianceConfiguration());
            modelBuilder.Configurations.Add(new GuildConfiguration());
            modelBuilder.Configurations.Add(new ModSetConfiguration());
            modelBuilder.Configurations.Add(new ModSlotConfiguration());
            modelBuilder.Configurations.Add(new ModStatTypeConfiguration());
            modelBuilder.Configurations.Add(new ModStatUnitConfiguration());
            modelBuilder.Configurations.Add(new PlayerConfiguration());
            modelBuilder.Configurations.Add(new PlayerCharacterConfiguration());
            modelBuilder.Configurations.Add(new PlayerModConfiguration());
            modelBuilder.Configurations.Add(new PlayerModSetConfiguration());
            modelBuilder.Configurations.Add(new PlayerShipConfiguration());
            modelBuilder.Configurations.Add(new UnitConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new AllianceConfiguration(schema));
            modelBuilder.Configurations.Add(new GuildConfiguration(schema));
            modelBuilder.Configurations.Add(new ModSetConfiguration(schema));
            modelBuilder.Configurations.Add(new ModSlotConfiguration(schema));
            modelBuilder.Configurations.Add(new ModStatTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new ModStatUnitConfiguration(schema));
            modelBuilder.Configurations.Add(new PlayerConfiguration(schema));
            modelBuilder.Configurations.Add(new PlayerCharacterConfiguration(schema));
            modelBuilder.Configurations.Add(new PlayerModConfiguration(schema));
            modelBuilder.Configurations.Add(new PlayerModSetConfiguration(schema));
            modelBuilder.Configurations.Add(new PlayerShipConfiguration(schema));
            modelBuilder.Configurations.Add(new UnitConfiguration(schema));
            return modelBuilder;
        }

        partial void InitializePartial();
        partial void OnModelCreatingPartial(System.Data.Entity.DbModelBuilder modelBuilder);
    }
}
// </auto-generated>
